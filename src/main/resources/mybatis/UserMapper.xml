<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tpadsz.after.dao.UserDao">

    <resultMap type="User" id="BaseResultMap">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="uname" property="uname" jdbcType="VARCHAR"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="pwd" property="pwd" jdbcType="VARCHAR"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="DATE"/>
        <result column="status" property="status" jdbcType="BIT"/>
        <result column="is_locked" property="isLocked" jdbcType="BIT"/>
    </resultMap>

    <sql id="Base_Column_List">
		id,uname,account,pwd,salt,mobile,create_date,email,create_date,is_locked,status
	</sql>

    <select id="selectById" resultMap="BaseResultMap" parameterType="string">
        select
        <include refid="Base_Column_List"/>
        from f_user_account
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from f_user_account
    </select>

    <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from f_user_account
        where uname = #{uname}
        or account = #{uname}
        or mobile = #{uname}
        or email = #{uname}
    </select>

    <delete id="deleteById" parameterType="string">
        <!-- DELETE user,user_role FROM user LEFT JOIN user_role ON user.id = user_role.user_id WHERE user.id= #{id,jdbcType = INTEGER} -->
        DELETE from f_user_account where id = #{id}
    </delete>

    <insert id="insert" parameterType="User">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into f_user_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uname != null">
                uname,
            </if>
            <if test="pwd != null">
                pwd,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="updateDate != null">
                update_date
            </if>
        </trim>
        values
        (
        #{uanme,jdbcType=VARCHAR},
        #{pwd,jdbcType=VARCHAR},
        #{salt,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR},
        now(),
        #{mobile,jdbcType=VARCHAR},
        #{status,jdbcType=VARCHAR},
        now()
        )
    </insert>

    <insert id="insertSelective" parameterType="User">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into f_user_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="birth != null">
                birth,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="email != null">
                email,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="birth != null">
                #{age,jdbcType=DATE},
            </if>
            <if test="gender != null">
                #{age,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{email,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByIdSelective" parameterType="User">
        update user
        <set>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="birth != null">
                #{age,jdbcType=DATE},
            </if>
            <if test="gender != null">
                #{age,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{email,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="User">
		update user
		set username = #{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		birth = #{birth,jdbcType=DATE},
		gender=#{gender,jdbcType=VARCHAR},
		email=#{email,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

    <!--禁用用户-->
    <update id="blockUserById" parameterType="java.lang.Integer">
        UPDATE USER
        SET status = '0'
        WHERE
        id = #{id,jdbcType = INTEGER}
    </update>

    <!--解禁用户-->
    <update id="unblockUserById" parameterType="java.lang.Integer">
        UPDATE USER
        SET status = '1'
        WHERE
        id = #{id,jdbcType = INTEGER}
    </update>

</mapper>